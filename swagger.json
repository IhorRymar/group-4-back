{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.2",
    "title": "Wallet API docs",
    "description": "API documentation for GoIT project 'Wallet'. [Backend github repository](https://github.com/Danatey/wallet-project-goit-back)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "http://localhost:1453"
    },
    {
      "url": "http://localhost:1453"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transactions",
      "description": "Transactions endpoints"
    }
     
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "Users registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Users authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/users/logout": {
      "get": {
        "tags": ["Users"],
        "summary": "Logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Empty request",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logout successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },

    "/api/transactions/categories": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get all transactions categories",
        "parameters": [],
        "security": [],
        
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllTransactionCategoriesResponse"
                }
              }
            }
          }
        }
      }
    },
     "/api/transactions": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Transaction registration",
        "parameters": [{
          "in": "header",
          "name": "Authorization",
          "required": true,
          "type": "string",
          "description": "The token issued to the current user"
        }],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Category have to be added for Expense",
            "content": {}
          },
           "401": {
            "description": "Missing header with authorization token",
            "content": {}
          },
          "430": {
            "description": "Category not found",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Transactions"],
        "summary": "Get all transactions",
         "parameters": [{
          "in": "header",
          "name": "Authorization",
          "required": true,
          "type": "string",
          "description": "The token issued to the current user"
        }],
        "security": [{ "Bearer": [] }],
        
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllTransactionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          }
        }
      }
    },
     "/api/transactions/{transactionId}": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get transaction by id",
         "parameters": [{
          "in": "path",
          "name": "transactionId",
          "required": true,
          "type": "string",
          "description": "Transaction ID"
        }],
        "security": [{ "Bearer": [] }],
        
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationTransactionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          },
          "403": {
            "description": "Access denied",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Transactions"],
        "summary": "Update transaction by id",
         "parameters": [{
          "in": "path",
          "name": "transactionId",
          "required": true,
          "type": "string",
          "description": "Transaction ID"
        }],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransactionRequest"
              }
            }
          }
        },
        
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationTransactionResponse"
                }
              }
            }
          },
           "400": {
            "description": "You can't change transaction type",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          },
          "403": {
            "description": "Access denied",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
            "430": {
            "description": "Category not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Transactions"],
        "summary": "Delete transaction",
        "parameters": [{
          "in": "path",
          "name": "transactionId",
          "required": true,
          "type": "string",
          "description": "Transaction ID"
        }],
        "security": [{ "Bearer": [] }],
       
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {}
          },
           "401": {
            "description": "Missing header with authorization token",
            "content": {}
          },
           "403": {
            "description": "Access denied",
            "content": {}
          },
           "404": {
            "description": "Not found",
            "content": {}
          }
        
        }
      }
    }


  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": ["name", "email", "password"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "userName"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "required": ["id", "email", "name"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "123423lk5jh34k5n3lk5ml343"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "userName"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com"
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Session's access token (needed for all requests)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiI1ZmMyMDg1YmQwOTM2NTI4MTA3Y2UyNzQiLCJzaWQiOiI1ZmMyZDJmY2UxZDIwNTA2NzAyYmRkMjIiLCJpYXQiOjE2MDY2MDM1MTYsImV4cCI6MTYwNjYwNzExNn0.rJ_QjU4KvA76H96RHsvOBChK0Vjbd0NmqjMxdQVJIXA"
          },
          "refresh_token": {
            "type": "string",
            "description": "Session's refresh token",
            "example": "c3f8c5ca-c847-4dd0-9310-8801e1a84695"
          }
        }
      },
      "LogoutRequest": {
        "required": ["access_token"],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "User's access_token. This token need add to headers Authorization: Bearer token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxOTk0YjdkYzJiMzE2NGY5MjQ4ODNjYyIsImlhdCI6MTYzNzQzNjgyNywiZXhwIjoxNjM3NDQwNDI3fQ.C-oGS_NLFxd4A7AfysfWcW9SJP1kAleytL7MYclP4Y4"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "code": 200,
            "example": "NO CONTENT"
          }
        }
      },

  "AllTransactionCategoriesResponse": {
        "type": "array",
        "items": {
          "type": "object",
        
        "properties": {
          "category_id": {
            "type": "number",
            "description": "Category ID",
            "example": "4"
          },
          "category_name": {
            "type": "string",
            "description": "Category name",
            "example": "Education"
          }
        }
        }
      },
        "RegistrationTransactionRequest": {
        "required": ["transactionType", "amount", "date", "comment"],
        "type": "object",
        "properties": {
          "transactionType": {
            "type": "string",
            "description": "Type of transaction: income or expense",
            "example": "expense"
          },
          "amount": {
            "type": "number",
            "description": "Transaction amount",
            "example": "1000"
          },
          "date": {
            "type": "date",
            "description": "Transaction date",
            "example": "01/01/2022"
          },
           "category": {
            "type": "number",
            "description": "Transaction category, required for transactionType 'expense'",
            "example": "4"
          },
            "comment": {
             "type": "string",
             "description": "Transaction comment",
             "example": "Payment for GOIT courses"
          }
        }
      },

        "RegistrationTransactionResponse": {
        "required": ["_id", "transactionType", "amount", "date", "comment"],
        "type": "object",
        "properties": {
           "_id": {
            "type": "string",
            "description": "Transaction's id",
            "example": "123423lk5jh34k5n3lk5ml343"
          },
          "transactionType": {
            "type": "string",
            "description": "Type of transaction: income or expense",
            "example": "expense"
          },
          "amount": {
            "type": "number",
            "description": "Transaction amount",
            "example": "1000"
          },
          "date": {
            "type": "date",
            "description": "Transaction date",
            "example": "01/01/2022"
          },
          "category": {
            "type": "number",
            "description": "Transaction category",
            "example": "4"
          },
            "comment": {
             "type": "string",
             "description": "Transaction comment",
             "example": "Payment for GOIT courses"
          }
        }
        },

        "AllTransactionResponse": {
        "type": "array",
        "items": {
          "type": "object",
        
        "properties": {
           "_id": {
            "type": "string",
            "description": "Transaction's id",
            "example": "123423lk5jh34k5n3lk5ml343"
          },
          "transactionType": {
            "type": "string",
            "description": "Type of transaction: income or expense",
            "example": "expense"
          },
          "amount": {
            "type": "number",
            "description": "Transaction amount",
            "example": "1000"
          },
          "date": {
            "type": "date",
            "description": "Transaction date",
            "example": "01/01/2022"
          },
          "category": {
            "type": "number",
            "description": "Transaction category",
            "example": "4"
          },
            "comment": {
             "type": "string",
             "description": "Transaction comment",
             "example": "Payment for GOIT courses"
          }
        }
        }
      },
        "UpdateTransactionRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Transaction amount",
            "example": "1000"
          },
          "date": {
            "type": "date",
            "description": "Transaction date",
            "example": "01/01/2022"
          },
           "category": {
            "type": "number",
            "description": "Transaction category, required for transactionType 'expense'",
            "example": "4"
          },
            "comment": {
             "type": "string",
             "description": "Transaction comment",
             "example": "Payment for GOIT courses"
          }
        }
      }
      },

       "securitySchemas": {
              "Bearer": {
              "type": "http",
              "scheme": "bearer",
              "bearerFormat": "JWT"
            }
          }
    }
        }