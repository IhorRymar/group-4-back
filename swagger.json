{
  "openapi": "3.0.1",
  "info": {
    "version": "2.1.1",
    "title": "Wallet API docs",
    "description": "API documentation for GoIT project 'Wallet'. [Backend github repository](https://github.com/IhorRymar/group-4-back)",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "https://wallet-backend.cyclic.app/"
    },
    {
      "url": "http://localhost:1453"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Authorization endpoints"
    },
    {
      "name": "Transactions",
      "description": "Transactions endpoints"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "Users registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/api/users/signin": {
      "post": {
        "tags": ["Users"],
        "summary": "Users authentication",
        "parameters": [],
        "requestBody": {
          "description": "Authentication's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SigninRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/users/logout": {
      "get": {
        "tags": ["Users"],
        "summary": "Logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "description": "Empty request",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logout successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },

    "/api/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Getting information about the current user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (invalid access token)",
            "content": {}
          }
        }
      }
    },
    "/api/users/refresh": {
      "post": {
        "tags": ["Users"],
        "summary": "Token refresh",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "Not Found",
            "content": {}
          }
        }
      }
    },

    "/api/transactions/categories": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get all transactions categories",
        "parameters": [],
        "security": [],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllTransactionCategoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Transaction registration",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationTransactionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Category have to be added for Expense",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          },
          "430": {
            "description": "Category not found",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Transactions"],
        "summary": "Get all transactions. Get total quantity of all transactions. Limit for page = 10.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllTransactionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/{transactionId}": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get transaction by id",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string",
            "description": "Transaction ID"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationTransactionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          },
          "403": {
            "description": "Access denied",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": ["Transactions"],
        "summary": "Update transaction by id",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string",
            "description": "Transaction ID"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Transaction's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransactionRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "You can't change transaction type",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          },
          "403": {
            "description": "Access denied",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "430": {
            "description": "Category not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Transactions"],
        "summary": "Delete transaction",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string",
            "description": "Transaction ID"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          },
          "403": {
            "description": "Access denied",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/statistics": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Get transactions statistics. 'startMonth' and 'startYear' are requered. 'endMonth' and 'endYear' are optional.",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Period time request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionStatisticsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionStatisticsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/balance": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get balance by date. 'balanceDate' in Query Params is optional. 'balanceDate' = current Date by default",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          },
          {
            "in": "query",
            "name": "Balance Date",

            "type": "date",
            "description": "Balance date"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          }
        }
      }
    },
    "/api/transactions/transactionsYears": {
      "get": {
        "tags": ["Transactions"],
        "summary": "Get years of all transactions and their quantity in a year",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "description": "The token issued to the current user"
          }
        ],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsYearsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Missing header with authorization token",
            "content": {}
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "RegistrationRequest": {
        "required": ["name", "email", "password"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "userName"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwErt#$123"
          }
        }
      },
      "RegistrationResponse": {
        "required": ["id", "email", "name", "accessToken"],
        "type": "object",
        "properties": {
          "user": {
                "properties": {
                "_id": {
                  "type": "string",
                  "description": "User's id",
                  "example": "123423lk5jh34k5n3lk5ml343"
                },
                "name": {
                  "type": "string",
                  "description": "User's name",
                  "example": "userName"
                },
                "email": {
                  "type": "string",
                  "description": "User's email",
                  "example": "example@gmail.com"
                },
                "accessToken": {
                  "type": "string",
                  "description": "Session's access token (needed for all requests)",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzOGU3ZjhmNzAwODQxZDE2YmU4YTk1NyIsImlhdCI6MTY3MDI4MzQ3NSwiZXhwIjoxNjcwMzA1MDc1fQ.qgRCKCah8XFrvMUxairCrugWPyxhf2PBNFHRxJ7naEE"
                }
              }
          }
        }
      },
      "SigninRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwErt#$123"
          }
        
        }
      },
      "SigninResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Session's access token (needed for all requests)",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzOGU3ZjhmNzAwODQxZDE2YmU4YTk1NyIsImlhdCI6MTY3MDI4MzQ3NSwiZXhwIjoxNjcwMzA1MDc1fQ.qgRCKCah8XFrvMUxairCrugWPyxhf2PBNFHRxJ7naEE"
          },
          "refreshToken": {
            "type": "string",
            "description": "Session's refresh token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzOGU3ZjhmNzAwODQxZDE2YmU4YTk1NyIsImlhdCI6MTY3MDI4MzQ3NSwiZXhwIjoxNjcwNTQyNjc1fQ.ZO5ruC6M0-6ZnGQ6FoWAUyClQ3FX3l5T6NaRQhGXEmY"
          },
          "user": {
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "userName"
              }
            }
          }
        }
      },
      "LogoutRequest": {
        "required": ["access_token"],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "User's access_token. This token need add to headers Authorization: Bearer token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxOTk0YjdkYzJiMzE2NGY5MjQ4ODNjYyIsImlhdCI6MTYzNzQzNjgyNywiZXhwIjoxNjM3NDQwNDI3fQ.C-oGS_NLFxd4A7AfysfWcW9SJP1kAleytL7MYclP4Y4"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "code": 200,
            "example": "NO CONTENT"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's ID",
            "example": "638f2bd6e5f7019fa49cdbb3"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Aeris Targarien"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "example": "example@gmail.com"
          },
          "currentBalance": {
            "type": "string",
            "description": "User's balance",
            "example": "10000"
          },
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzOGYyYmQ2ZTVmNzAxOWZhNDljZGJiMyIsImlhdCI6MTY3MDMyODA0NCwiZXhwIjoxNjcwMzQ5NjQ0fQ.d9RvMrxhnj_9bLBzq0PNugTsluT1rKC8VHZXym5LFFs"
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzOGYyYmQ2ZTVmNzAxOWZhNDljZGJiMyIsImlhdCI6MTY3MDMyODA0NCwiZXhwIjoxNjcwNTg3MjQ0fQ.BgtdWAcexMJBK3YFuxN_1Pr0EUV4zvSBtsV88-MQj7M"
          }
        }
      },

      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzOGYyYmQ2ZTVmNzAxOWZhNDljZGJiMyIsImlhdCI6MTY3MDMyODA0NCwiZXhwIjoxNjcwMzQ5NjQ0fQ.d9RvMrxhnj_9bLBzq0PNugTsluT1rKC8VHZXym5LFFs"
          },
          "refreshToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzOGYyYmQ2ZTVmNzAxOWZhNDljZGJiMyIsImlhdCI6MTY3MDMyODA0NCwiZXhwIjoxNjcwNTg3MjQ0fQ.BgtdWAcexMJBK3YFuxN_1Pr0EUV4zvSBtsV88-MQj7M"
          }
        }
      },

      "AllTransactionCategoriesResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
             "_id": {
              "type": "number",
              "description": "Category ID from MongoDB",
              "example": "638b874d623f4f9905788cbd"
            },
            "category_id": {
              "type": "number",
              "description": "Category ID",
              "example": "4"
            },
             "category_type": {
              "type": "string",
              "description": "Category type: expense or income",
              "example": "expense"
            },
            "category_name": {
              "type": "string",
              "description": "Category name",
              "example": "Education"
            }
          }
        }
      },
      "RegistrationTransactionRequest": {
        "required": ["transactionType", "amount", "date"],
        "type": "object",
        "properties": {
          "transactionType": {
            "type": "string",
            "description": "Type of transaction: income or expense",
            "example": "expense"
          },
          "amount": {
            "type": "number",
            "description": "Transaction amount",
            "example": "1000"
          },
          "date": {
            "type": "date",
            "description": "Transaction date",
            "example": "01/01/2022"
          },
          "category": {
            "type": "number",
            "description": "Transaction category, required for transactionType 'expense'",
            "example": "4"
          },
          "comment": {
            "type": "string",
            "description": "Transaction comment",
            "example": "Payment for GOIT courses"
          }
        }
      },

      "RegistrationTransactionResponse": {
        "required": ["_id", "transactionType", "amount", "date"],
        "type": "object",
        "properties": {
          "transactionType": {
            "type": "string",
            "description": "Type of transaction: income or expense",
            "example": "expense"
          },
          "amount": {
            "type": "number",
            "description": "Transaction amount",
            "example": "1000"
          },
          "date": {
            "type": "date",
            "description": "Transaction date",
            "example": "2022-02-28T22:00:00.000Z"
          },
          "category": {
            "type": "number",
            "description": "Transaction category",
            "example": "4"
          },
          "comment": {
            "type": "string",
            "description": "Transaction comment",
            "example": "Payment for GOIT courses"
          },
            "owner": {
            "type": "string",
            "description": "Owner's id from MongpDB",
            "example": "123423lk5jh34k5n3lk5ml343"
          },
            "_id": {
            "type": "string",
            "description": "Transaction's id from MongpDB",
            "example": "123423lk5jh34k5n3lk5ml343"
          },
           "createdAt": {
            "type": "date",
            "description": "createdAt",
            "example": "2022-02-28T22:00:00.000Z"
          },
             "updatedAt": {
            "type": "date",
            "description": "updatedAt",
            "example": "2022-02-28T22:00:00.000Z"
          }
        }
      },

      "AllTransactionResponse": {
         "type": "object",
         "properties": {
          "transactionsTotalQuantity": {
            "type": "number",
            "description": "Total quantity of all transactions",
            "example": "10"
          },
          "result": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "Transaction's id",
                  "example": "123423lk5jh34k5n3lk5ml343"
                },
                "transactionType": {
                  "type": "string",
                  "description": "Type of transaction: income or expense",
                  "example": "expense"
                },
                "amount": {
                  "type": "number",
                  "description": "Transaction amount",
                  "example": "1000"
                },
                "date": {
                  "type": "date",
                  "description": "Transaction date",
                  "example": "2022-02-28T22:00:00.000Z"
                },
                "category": {
                  "type": "number",
                  "description": "Transaction category",
                  "example": "4"
                },
                "comment": {
                  "type": "string",
                  "description": "Transaction comment",
                  "example": "Payment for GOIT courses"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "Transaction owner's id",
                      "example": "638dfad4fc6055d8a66df99e"
                    },
                    "name": {
                        "type": "string",
                        "description": "Transaction owner's name",
                        "example": "John"
                    },
                      "email": {
                        "type": "string",
                        "description": "Transaction owner's email",
                        "example": "John@gmail.com"
                    }
                  }
                },
                "balance": {
                  "type": "number",
                  "description": "Total balance including current transaction",
                  "example": "4953"
                }
              }
            }
          }
         }
      },
      "UpdateTransactionRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Transaction amount",
            "example": "1000"
          },
          "date": {
            "type": "date",
            "description": "Transaction date",
            "example": "01/01/2022"
          },
          "category": {
            "type": "number",
            "description": "Transaction category, required for transactionType 'expense'",
            "example": "4"
          },
          "comment": {
            "type": "string",
            "description": "Transaction comment",
            "example": "Payment for GOIT courses"
          }
        }
      },
      "TransactionStatisticsRequest": {
        "required": ["startMonth", "startYear"],
        "type": "object",
        "properties": {
          "startMonth": {
            "type": "number",
            "description": "Start month for requested period",
            "example": "3"
          },
          "startYear": {
            "type": "number",
            "description": "Start year for requested period",
            "example": "2021"
          },
          "endMonth": {
            "type": "number",
            "description": "End month for requested period",
            "example": "5"
          },
          "endYear": {
            "type": "number",
            "description": "End year for requested period",
            "example": "2022"
          }
        }
      },
      "TransactionStatisticsResponse": {
        "type": "object",
        "properties": {
          "expenseStatistics": {
            "type": "array",
            "description": "Expense Statistics",
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "number",
                  "description": "Category's id"
                },
                "totalSum": {
                  "type": "number",
                  "description": "Sum of all transactions from category ' ' for the requested period"
                },
                "categoryName": {
                  "type": "string",
                  "description": "Category's name"
                }
              }
            }
          },
          "incomeStatistics": {
            "type": "array",
            "description": "Expense Statistics",
            "items": {
              "type": "object",
              "properties": {
                "totalSum": {
                  "type": "number",
                  "description": "Sum of all transactions from category ' ' for the requested period"
                }
              }
            }
          }
        },
        "example": [
          {
            "expenseStatistics": [
              { "category": "1", "totalSum": "1000", "categoryName": "Food" },
              { "category": "2", "totalSum": "2000", "categoryName": "Car" }
            ]
          },
          { "incomeStatistics": [{ "totalSum": "1000" }] }
        ]
      },
      "BalanceResponse": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "description": "Balance",
            "example": "1000"
          }
        }
      },
        "TransactionsYearsResponse": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "year": {
                  "type": "string",
                   "example": "2022"
                },
                "transactionsQuantity": {
                  "type": "number",
                   "example": "10"
                }
               
              }
            }
          
      }
    },

    "securitySchemas": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
